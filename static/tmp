
<!DOCTYPE html>
<html lang="en">
<head>

  {% block title %}<title>CRM</title>{% endblock %}
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

  <!-- Добавление дополнительного статического CSS файла -->
  {% load static %}
  <link rel="stylesheet" href="{% static 'css/crm.css' %}">
</head>

<body>

  <div class="container-fluid">

    <div class="row">
      <div class="col-sm-1">
      {% block sidebar %}
      <ul class="sidebar-nav">
          <li><a href="{% url 'index' %}">Home</a></li>
      </ul>
     {% endblock %}
      </div>
      <div class="col-sm-10 ">
      {% block content %}{% endblock %}
          {% block pagination %}
  {% if is_paginated %}
      <div class="pagination">
          <span class="page-links">
              {% if page_obj.has_previous %}
                  <a href="{{ request.path }}?page={{ page_obj.previous_page_number }}">previous</a>
              {% endif %}
              <span class="page-current">
                  Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}.
              </span>
              {% if page_obj.has_next %}
                  <a href="{{ request.path }}?page={{ page_obj.next_page_number }}">next</a>
              {% endif %}
          </span>
      </div>
  {% endif %}

  <ul class="sidebar-nav">

    ...

  </ul>


{% endblock %}
      </div>
    </div>

  </div>
</body>
</html>

 # def get(self, request, *args, **kwargs):
    #     # self.object = None
    #     # form_class = self.get_form_class()
    #     # form = self.get_form(form_class)
    #     formsetPhone = PhoneInlineFormset(instance=self.object)
    #     formsetEmail = EmailInlineFormset(instance=self.object)
    #     return self.render_to_response(
    #         self.get_context_data(phonesFormset=formsetPhone,
    #                               emailsFormset=formsetEmail))
    #
    # def post(self, request, *args, **kwargs):
    #     # self.object = None
    #     # form_class = self.get_form_class()
    #     # form = self.get_form(form_class)
    #     formsetPhone = PhoneInlineFormset(request.POST, isinstance(self.object))
    #     formsetEmail = EmailInlineFormset(request.POST,  instance=self.object)
    #
    #     if self.form.is_valid() and formsetPhone.is_valid() and formsetEmail.is_valid():
    #         return self.form_valid(formsetPhone, formsetEmail)

    <!--    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>-->